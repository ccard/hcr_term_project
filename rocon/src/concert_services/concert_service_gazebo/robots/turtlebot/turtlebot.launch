<launch>
  <arg name="name" />
  <arg name="loc_x" />
  <arg name="loc_y" />
  <arg name="loc_z" />
  <arg name="loc_roll"/>
  <arg name="loc_pitch"/>
  <arg name="loc_yaw"/>
  <arg name="world_namespace"/>
  <arg name="base_prefix" default="mobile_base"/>

  <arg name="base"        default="kobuki"/>
  <arg name="stacks"      default="hexagons"/>
  <arg name="3d_sensor"   default="kinect"/>

  <arg name="urdf_file" default="$(find xacro)/xacro.py '$(find turtlebot_description)/robots/$(arg base)_$(arg stacks)_$(arg 3d_sensor).urdf.xacro'" />

  <param name="robot_description" command="$(arg urdf_file)" />

  <!-- Gazebo model spawner -->
  <param name="tf_prefix" value="$(arg name)"/>
  <param name="base_prefix" value="$(arg base_prefix)"/>
  <node name="spawn_turtlebot_model" pkg="gazebo_ros" type="spawn_model"
    args="-param robot_description
          -x $(arg loc_x)
          -y $(arg loc_y)
          -z $(arg loc_z)  
          -R $(arg loc_roll)
          -P $(arg loc_pitch)
          -Y $(arg loc_yaw)
          -unpause 
          -urdf 
          -gazebo_namespace $(arg world_namespace)
          -model $(arg name)" respawn="false" output="screen">
  </node>
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
    <param name="publish_frequency" type="double" value="30.0" />
    <param name="tf_prefix" value="$(arg name)"/>
  </node>

  <!-- Velocity muxer -->
  <node pkg="nodelet" type="nodelet" name="$(arg base_prefix)_nodelet_manager" args="manager"/>
  <node pkg="nodelet" type="nodelet" name="cmd_vel_mux"
        args="load yocs_cmd_vel_mux/CmdVelMuxNodelet $(arg base_prefix)_nodelet_manager">
    <param name="yaml_cfg_file" value="$(find turtlebot_bringup)/param/mux.yaml" />
    <remap from="cmd_vel_mux/output" to="$(arg base_prefix)/commands/velocity"/>
  </node>

  <!-- Bumper/cliff to pointcloud (not working, as it needs sensors/core messages) -->
  <include file="$(find turtlebot_bringup)/launch/includes/kobuki/bumper2pc.launch.xml"/>


  <!-- Fake laser -->
  <node pkg="nodelet" type="nodelet" name="laserscan_nodelet_manager" args="manager"/>
  <node pkg="nodelet" type="nodelet" name="depthimage_to_laserscan"
        args="load depthimage_to_laserscan/DepthImageToLaserScanNodelet laserscan_nodelet_manager">
    <param name="scan_height" value="10"/>
    <param name="output_frame_id" value="$(arg name)/camera_depth_frame"/>
    <param name="range_min" value="0.45"/>
    <remap from="image" to="camera/depth/image_raw"/>
    <remap from="scan" to="scan"/>
  </node>
</launch>
